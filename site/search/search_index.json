{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AWS AI Practioner Exam Prep","text":""},{"location":"#index-of-contents","title":"Index of Contents","text":"<ol> <li>Introduction to AWS and Cloud Computing</li> <li>Amazon Bedrock and Generative AI</li> <li>Prompt Engineering</li> <li>Amazon Q - Deep Dive</li> <li>Artificial Intelligence and Machine Learning</li> <li>AWS Managed AI Services</li> <li>Amazon Sagemaker - Deep Dive</li> <li>AI Challenges and Responsibilities</li> <li>AWS Security and More</li> <li>Tips for the Exam</li> </ol>"},{"location":"#introduction-to-aws-and-cloud-computing","title":"Introduction to AWS and Cloud Computing","text":"<p>Here are the links to notes which were similar in preparation for AWS Cloud Computing Practioner Exam: 1. Traditional IT Overview  2. What is Cloud Computing  3. Types of Cloud Computing  4. AWS Cloud Overview  5. Shared Responsibility Model &amp; AWS Acceptable Policy </p>"},{"location":"#amazon-bedrock-and-generative-ai-genai","title":"Amazon Bedrock and Generative AI (GenAI)","text":"<ol> <li>What is Generative AI?</li> <li>Amazon Bedrock - Overview</li> <li>Amazon Bedrock - Hands On</li> </ol>"},{"location":"amazonbedrock/","title":"Amazon Bedrock and Generative AI","text":"<p>In this section, we are going to talk about generative AI, and amazon bedrock (which is the main service on AWS that does generative AI). This is actually one of the main topic of the exam and one of the fastest growing AWS service.</p>"},{"location":"amazonbedrock/#section-1-what-is-genai","title":"Section 1 : What is GenAI?","text":""},{"location":"amazonbedrock/#introduction-to-generative-ai","title":"Introduction to Generative AI","text":"<p>Now that we are about to dive into Amazon Bedrock, which is a service for Generative AI (Gen AI) on AWS, let\u2019s take a step back and understand what Gen AI actually is.</p> <p>Generative AI is a subset of deep learning, which is itself a subset of machine learning, and in turn, a subset of artificial intelligence (AI).</p>"},{"location":"amazonbedrock/#what-is-generative-ai","title":"What is Generative AI?","text":"<ul> <li>Gen AI is used to generate new data that resembles the data it was trained on.</li> <li> <p>It can be trained on various types of data:</p> </li> <li> <p>Text</p> </li> <li>Images</li> <li>Audio</li> <li>Code</li> <li>Video</li> <li>And more</li> </ul> <p>Example: If we train a Gen AI model on a lot of dog images and also on hand-drawn cartoons, then ask it to generate a \u201ccartoon dog,\u201d it will combine the two together and create a dog that looks like a cartoon. That is the power of Generative AI</p> <ul> <li>This is the power of Gen AI: it combines its knowledge into new, and unique ways.</li> </ul> <p></p> <ul> <li>We are going to start with lots of unlabelled data (we will look later in the course, what it means by unlabelled data).</li> <li>We are going to train Foundational Model.</li> <li>Foundational Model (FM) are very broad, they are very big and very wide.</li> <li>FM can easily adapt to different kind of general tasks.</li> <li>A good foundational model can do:</li> <li>Text Generation</li> <li>Text Summarization</li> <li>Information Extraction</li> <li>Image Generation</li> <li>Can become a Chatbot</li> <li>Question Answering</li> <li>In general, we feed a lot of data into a foundational model, which has a option to do a lot of different tasks.  Now let's talk about Foundational Models</li> </ul>"},{"location":"amazonbedrock/#foundation-models","title":"Foundation Models","text":"<ul> <li>In order to generate data, as we said, we need to have Foundational Model.</li> <li>FM are trained on a wide variety of inputs.</li> <li> <p>Now to train foundational models:  Training foundation models:</p> </li> <li> <p>It requires millions of dollars, massive computing resources, and a lot of data.</p> </li> <li> <p>It is typically built by large companies like:</p> </li> <li> <p>OpenAI \u2013 (e.g., GPT-4o)</p> </li> <li>Meta</li> <li>Amazon</li> <li>Google</li> <li>Anthropic</li> </ul>"},{"location":"amazonbedrock/#open-source-vs-commercial-models","title":"Open Source vs Commercial Models","text":"<ul> <li> <p>Some foundation models are open source (free to use):</p> </li> <li> <p>Example: Meta\u2019s open-source efforts, Google\u2019s BERT</p> </li> <li> <p>Others are commercially licensed:</p> </li> <li> <p>Example: OpenAI\u2019s GPT models, Anthropic models</p> </li> </ul> <p>We will also see how to access these models on AWS as well.</p>"},{"location":"amazonbedrock/#large-language-models-llms","title":"Large Language Models (LLMs)","text":"<ul> <li>LLMs are a type of AI that rely on foundation models and are designed to generate coherent human-like text.</li> <li>Example: ChatGPT using GPT-4</li> <li>These LLMs are usually very Big Models:</li> <li>They are trained on large corpus of text data</li> <li>They are computionally heavy and use Billions of parameters</li> <li>They are trained on Books, articles, websites, other textual data</li> <li>They can perform wide range of language related tasks, which involves:</li> <li>Translation, Summarization</li> <li>Question Answering</li> <li>Content Creation</li> <li>How does it work when we interact with the LLM</li> </ul> <p>Interaction:</p> <ul> <li>We interact with the LLM by giving a prompt, for example : \"What is AWS\" <p>Note that, we will have dedicated section to understand about how to create prompt</p> </li> <li>Then the model is going to leverage all the existing content that it has learned from to generate new content.</li> <li>The generated text is Non Deterministic,that means that for every user that is using the same prompt, will get different generated text. (it won't be the same answer every time, see the image below)</li> </ul> <p></p>"},{"location":"amazonbedrock/#non-determinism-in-llms","title":"Non-Determinism in LLMs","text":"<p>So let's understand why though it is non-deterministic. Let's take an example:</p>"},{"location":"amazonbedrock/#example-sentence","title":"Example sentence:","text":"<p>\u201cAfter the rain, the streets were\u2026\u201d</p> <p>When an LLM sees this prompt, it calculates a list of potential next words along with probabilities:</p> Word Probability wet 0.40 flooded 0.25 slippery 0.15 empty 0.05 muddy 0.05 clean 0.04 blocked 0.03 ... ... <ul> <li> <p>These are statistically likely next words, based on what the model has seen during training.</p> </li> <li> <p>Then, an algorithm picks one of the words \u2014 maybe \u201cflooded\u201d.</p> </li> </ul> <p>So the model outputs:</p> <p>\u201cAfter the rain, the streets were flooded.\u201d</p> <p>This selection is based on random sampling with probabilities, not fixed logic. </p> <p>The process repeats for every next word.</p> <p>Given:</p> <p>\u201cAfter the rain, the streets were flooded...\u201d</p> <p>The next word could be:</p> Word Probability and 0.40 with 0.25 from 0.15 because 0.05 until 0.05 <code>.</code> 0.04 ... ... <ul> <li>All of these again, have associated probabilites, then the next word is going to be selected based on these probabilities.</li> <li>This is why when you ask the AI twice the same prompt, you may not get the same answers</li> <li>Because the sentence is determined with the statistical methods and not with the deterministic methods. </li> </ul>"},{"location":"amazonbedrock/#generative-ai-for-images","title":"Generative AI for Images","text":"<p>Let\u2019s now understand how Generative AI works with images.</p> <p>Gen AI is not limited to text. It can also generate images based on prompts or existing images, and it can even understand images to generate text descriptions.</p>"},{"location":"amazonbedrock/#types-of-image-based-gen-ai-tasks","title":"Types of Image-Based Gen AI Tasks","text":""},{"location":"amazonbedrock/#1-text-to-image-generation","title":"1. Text-to-Image Generation","text":"<p> - You give a prompt like:</p> <p>\u201cGenerate a blue sky with white clouds and the word \u2018Hello\u2019 written in the sky.\u201d</p> <ul> <li> <p>The Gen AI model uses that input to create a new image that visually matches the description.</p> </li> <li> <p>The image is generated from scratch, not copied from a dataset.</p> </li> </ul>"},{"location":"amazonbedrock/#2-image-to-image-translation","title":"2. Image-to-Image Translation","text":"<p> - You provide an input image and a style transformation instruction.</p> <ul> <li> <p>Example:</p> </li> <li> <p>Input: A photo of someone playing the piano</p> </li> <li> <p>Prompt: \u201cTransform this into Japanese anime style.\u201d</p> </li> <li> <p>Output: A version of the same image that now looks like it was drawn in manga/anime style.</p> </li> </ul>"},{"location":"amazonbedrock/#3-image-to-text-visual-question-answering","title":"3. Image-to-Text (Visual Question Answering)","text":"<p> - You give a picture and ask a question about it.</p> <ul> <li> <p>Example:</p> </li> <li> <p>Image: One apple and one orange</p> </li> <li> <p>Prompt: \u201cHow many apples do you see in the picture?\u201d</p> </li> <li> <p>Output:</p> </li> </ul> <p>\u201cThe picture shows one apple and the other fruit is an orange.\u201d</p> <ul> <li>The model is capable of understanding the contents of the image and generating relevant, human-like answers.</li> </ul>"},{"location":"amazonbedrock/#diffusion-models-behind-the-scenes","title":"Diffusion Models (Behind the Scenes)","text":"<p>One popular technique behind image generation is called a diffusion model. A well-known example is Stable Diffusion, which is based on this method.</p> <p>Let\u2019s break this down into two key processes:</p>"},{"location":"amazonbedrock/#1-forward-diffusion-training-phase","title":"1. Forward Diffusion (Training Phase)","text":"<ul> <li> <p>We start with a clear image, like a picture of a cat.</p> </li> <li> <p>Then, we gradually add noise to the image, step by step:</p> </li> <li> <p>Slight noise \u2192 more noise \u2192 until the image becomes pure noise.</p> </li> </ul> <p></p> <ul> <li> <p>Eventually, the image becomes completely unrecognizable.</p> </li> <li> <p>This teaches the model how images degrade into noise.</p> </li> </ul> <p>This is called the forward diffusion process.</p> <p>This process is done for a lot of pictures. Once the algorithm is trained to take images and create noise out of it,  then we do the opposite that is  Reverse Diffusion</p>"},{"location":"amazonbedrock/#2-reverse-diffusion-image-generation-phase","title":"2. Reverse Diffusion (Image Generation Phase)","text":"<ul> <li> <p>Now we want to generate a new image from scratch.</p> </li> <li> <p>The model starts with random noise and a text prompt like:</p> </li> </ul> <p>\u201cA cat with a computer\u201d</p> <ul> <li> <p>The model then works in reverse:</p> </li> <li> <p>It removes the noise step-by-step, each time refining the image.</p> </li> <li> <p>Over multiple steps, the image gradually becomes clear.</p> </li> <li> <p>Final output: A unique image of a cat with a computer.</p> </li> </ul> <p></p> <p>This image is new \u2014 not taken from training data \u2014 but created using the knowledge learned from how real images look and how noise distorts them.</p>"},{"location":"amazonbedrock/#summary-of-key-concepts","title":"Summary of Key Concepts","text":"<ul> <li>Gen AI creates new content (text, images, audio) from training data.</li> <li>Foundation models are trained on vast, diverse data to support multiple tasks.</li> <li>LLMs generate human-like text and are based on probability, not fixed rules.</li> <li>Non-deterministic output ensures variability in responses.</li> <li>Diffusion models generate images by reversing a noise process.</li> </ul>"},{"location":"amazonbedrock/#section-2-amazon-bedrock-overview","title":"Section 2 : Amazon Bedrock - Overview","text":""},{"location":"amazonbedrock/#introduction-to-amazon-bedrock","title":"Introduction to Amazon Bedrock","text":"<p>Now that we've learned about Generative AI and foundation models, it's time to talk about Amazon Bedrock, the main service on AWS used to build generative AI applications.</p> <p>Amazon Bedrock is a fully managed service, which means you don\u2019t have to worry about managing the underlying infrastructure. It provides a simple way to access and interact with multiple foundation models through a unified interface.</p>"},{"location":"amazonbedrock/#key-features-of-amazon-bedrock","title":"Key Features of Amazon Bedrock","text":"<ul> <li> <p>Fully managed service:</p> </li> <li> <p>No need to manage infrastructure</p> </li> <li> <p>AWS handles everything behind the scenes</p> </li> <li> <p>Data privacy:</p> </li> <li> <p>Your data stays within your AWS account</p> </li> <li> <p>It is not used to retrain the underlying foundation models</p> </li> <li> <p>Pay-per-use pricing model:</p> </li> <li> <p>You only pay for what you use</p> </li> <li> <p>Pricing details will be discussed later</p> </li> <li> <p>Unified API:</p> </li> <li> <p>One standardized method to interact with all foundation models</p> </li> <li> <p>Simplifies application development</p> </li> <li> <p>Multiple foundation models available:</p> </li> <li> <p>Easily choose and configure models from different providers</p> </li> <li> <p>Advanced features included:</p> </li> <li> <p>RAG (Retrieval Augmented Generation)</p> </li> <li>LLM Agents</li> <li>Security, privacy, governance, and responsible AI built-in in Amazon Bedrock</li> </ul>"},{"location":"amazonbedrock/#what-type-of-foundation-models-are-available-in-bedrock","title":"What type of Foundation Models are Available in Bedrock","text":"<p>Amazon Bedrock offers access to models from various top-tier AI providers:</p> <ul> <li>AI21 Labs</li> <li>Cohere</li> <li>Stability.ai</li> <li>Amazon</li> <li>Anthropic</li> <li>Meta</li> <li>Mistral AI</li> </ul> <p>\ud83d\udccc More providers and models will continue to be added over time.</p>"},{"location":"amazonbedrock/#how-bedrock-handles-models","title":"How Bedrock Handles Models","text":"<ul> <li> <p>When you use a foundation model:</p> </li> <li> <p>Bedrock creates a copy of the model instance for your exclusive use</p> </li> <li> <p>This ensures data isolation and privacy</p> </li> <li> <p>In some cases, you can fine-tune the model with your own data to better align it with your specific needs</p> </li> <li> <p>Again, none of your data is sent back to the original model providers</p> </li> </ul>"},{"location":"amazonbedrock/#bedrock-architecture-overview","title":"Bedrock Architecture Overview","text":"<p>Let\u2019s visualize how Bedrock works, using a simplified diagram explained during the lecture:</p>"},{"location":"amazonbedrock/#core-flow","title":"Core Flow:","text":"<p> 1. Users interact with an interactive playground</p> <ul> <li> <p>Users select the model to use</p> </li> <li> <p>Input a question like:</p> <p>\u201cWhat is the most popular dish in Italy?\u201d</p> </li> <li> <p>Model responds with an answer, for example:</p> <p>\u201cPizza and pasta\u201d</p> </li> <li> <p>We can have Knowledge Bases / RAG (Retrieval Augmented Generation)</p> </li> <li> <p>This allows fetching external data to provide more accurate and relevant answers (will be covered in detail in later sections)</p> </li> <li> <p>Model Fine-Tuning</p> </li> <li> <p>You can upload and apply your own data to personalize the foundation model</p> </li> <li> <p>All fine-tuning stays within your AWS account</p> </li> <li> <p>Unified API Access</p> </li> <li> <p>All apps communicate with Bedrock using a single API format</p> </li> <li>Bedrock manages model selection and orchestration behind the scenes</li> </ul>"},{"location":"amazonbedrock/#summary","title":"Summary","text":"<ul> <li>Amazon Bedrock makes it easy to build, test, and deploy Gen AI applications using various foundation models.</li> <li>It gives you data privacy, scalability, fine-tuning, and a unified developer experience.</li> <li>In the next lecture, we\u2019ll explore hands-on practice with Bedrock\u2019s interactive playground.</li> </ul>"},{"location":"amazonbedrock/#amazon-bedrock-hands-on","title":"Amazon Bedrock - Hands On","text":""},{"location":"amazonbedrock/#section-3-foundational-model","title":"Section 3 : Foundational Model","text":"<p>This section covers the key considerations and trade-offs involved in selecting a base foundation model within Amazon Bedrock. The choice of model depends on several factors including:</p> <ul> <li> <p>performance, </p> </li> <li> <p>token capacity, </p> </li> <li> <p>language support, </p> </li> <li> <p>modality, </p> </li> <li> <p>cost, </p> </li> <li> <p>customization options, and </p> </li> <li> <p>inference speed.</p> </li> </ul> <p>There is no single best option, as each model brings unique strengths and constraints. Therefore, experimentation and alignment with business needs are crucial.</p>"},{"location":"amazonbedrock/#factors-to-consider-when-selecting-a-model","title":"Factors to Consider When Selecting a Model","text":"<p>Several key parameters influence the choice of a foundation model:</p> <ul> <li> <p>The required level of performance and capability</p> </li> <li> <p>The maximum token context window, which determines how much input data the model can process</p> </li> <li> <p>Whether the model supports multimodal input and output, such as text, image, audio, or video</p> </li> <li> <p>The cost per 1,000 tokens or per request</p> </li> <li> <p>The ability to perform fine-tuning with your own data</p> </li> <li> <p>The licensing agreements, which may vary across models</p> </li> <li> <p>The expected latency during inference</p> </li> </ul> <p>Some models are optimized for cost-effectiveness while others are designed to deliver high-accuracy outputs. Multimodal capabilities, in particular, are important for applications involving diverse media formats.</p>"},{"location":"amazonbedrock/#amazon-titan-and-its-role-in-the-aws-ecosystem-v-imp-for-exam","title":"Amazon Titan and Its Role in the AWS Ecosystem (V Imp for Exam)","text":"<p>Since this course focuses on AWS, special attention is given to Amazon Titan, which is Amazon\u2019s High-performing foundation model suite. </p> <p>Titan supports text and image generation, as well as multimodal capabilities. </p> <p>The model can be fine-tuned with custom datasets using a unified API within Amazon Bedrock.</p> <p>Smaller versions of Titan may be more cost-effective but will likely have reduced knowledge coverage compared to larger, more capable models. Deciding which version to use is a balance between cost and quality.</p>"},{"location":"amazonbedrock/#comparing-four-popular-foundation-models","title":"Comparing Four Popular Foundation Models","text":"<p>The following comparison covers four commonly available models on Amazon Bedrock:</p> Model Max Tokens Features Use Cases Pricing (per 1K tokens) Amazon Titan (Text Express) 8K High-performance text model, supports 100+ languages Content creation, classification, education Input: $0.0008, Output: $0.0016 Llama 2 (70B-chat) 4K Suited for large-scale tasks and English dialogue Text generation, customer service Input: $0.0019, Output: $0.0025 Claude 2.1 200K High-capacity text generation, multilingual Analysis, forecasting, document comparison Input: $0.008, Output: $0.024 Stable Diffusion (SDXL 1.0) 77 Tokens/Prompt Image generation only Image creation for advertising, media... $0.04\u2013$0.08 per image"},{"location":"amazonbedrock/#observations-based-on-the-comparison","title":"Observations Based on the Comparison","text":"<ul> <li> <p>Claude 2.1 offers the largest context window (200K tokens), making it suitable for processing large codebases, books, or documents. This is critical in use cases that require deep memory of long inputs.</p> </li> <li> <p>Amazon Titan is significantly cheaper than both Llama 2 and Claude, while still supporting multilingual capabilities.</p> </li> <li> <p>Llama 2 provides strong performance for conversational and English-based tasks but has a smaller context window and slightly higher cost than Titan.</p> </li> <li> <p>Stable Diffusion is purely for image-related generation and accepts shorter prompts. Its cost is per image rather than per token, and it supports features like object removal, background replacement, and visual modification.</p> </li> </ul>"},{"location":"amazonbedrock/#final-thoughts-on-model-selection","title":"Final Thoughts on Model Selection","text":"<p>While all these models are converging toward similar capabilities, the real decision comes down to testing each one for your specific needs:</p> <ul> <li> <p>Claude may be preferred for heavy document analysis and large prompt sizes.</p> </li> <li> <p>Titan offers a strong balance between performance, cost, and multilingual support.</p> </li> <li> <p>Llama 2 is ideal for scalable dialogue and customer-facing tasks.</p> </li> <li> <p>Stable Diffusion is the go-to for image and creative generation needs.</p> </li> </ul> <p>Pricing is a key differentiator. Claude is the most expensive, while Amazon Titan offers the lowest cost per token. Rapid cost accumulation is possible with large-scale inference or continuous image generation, so monitoring usage is essential.</p>"},{"location":"amazonbedrock/#foundational-model-hands-on","title":"Foundational Model - Hands On","text":""},{"location":"amazonbedrock/#section-4-fine-tuning-a-model","title":"Section 4 : Fine-Tuning a Model","text":""},{"location":"amazonbedrock/#section-5-fm-evaluation","title":"Section 5 : FM Evaluation","text":""},{"location":"amazonbedrock/#fm-evaluation-hands-on","title":"FM Evaluation - Hands On","text":""},{"location":"amazonbedrock/#section-6-rag-knowledge-base","title":"Section 6 : RAG &amp; Knowledge Base","text":""},{"location":"amazonbedrock/#rag-knowledege-base-hands-on","title":"RAG &amp; Knowledege Base - Hands On","text":""},{"location":"amazonbedrock/#section-7-more-genai-concepts","title":"Section 7 : More GenAI Concepts","text":""},{"location":"amazonbedrock/#section-8-guardrails","title":"Section 8 : GuardRails","text":""},{"location":"amazonbedrock/#guardrails-hands-on","title":"GuardRails - Hands On","text":""},{"location":"amazonbedrock/#section-9-agents","title":"Section 9 : Agents","text":""},{"location":"amazonbedrock/#section-10-cloudwatch-integration","title":"Section 10 : CloudWatch Integration","text":""},{"location":"amazonbedrock/#cloudwatch-integration-hands-on","title":"CloudWatch Integration - Hands On","text":""},{"location":"amazonbedrock/#section-11-pricing","title":"Section 11 : Pricing","text":""},{"location":"amazonbedrock/#section-12-ai-stylist","title":"Section 12 : AI Stylist","text":""},{"location":"amazonbedrock/#quiz","title":"Quiz","text":""},{"location":"typesofCC/","title":"Types of Cloud Computing","text":""},{"location":"typesofCC/#1-infrastructure-as-a-service-iaas","title":"1. Infrastructure as a Service (IaaS)","text":"<ul> <li> <p>There are the building blocks for Cloud IT</p> </li> <li> <p>With the IaaS, we are going to provide networking, computers, and data storage space in its raw form</p> </li> <li> <p>Using this building blocks (like Legos), we will get High Level of Flexibility</p> </li> <li> <p>With this, we can easily migrate from Traditional on Premises-IT to Cloud</p> </li> </ul>"},{"location":"typesofCC/#2-platform-as-a-service-paas","title":"2. Platform as a Service (PaaS)","text":"<ul> <li> <p>In this, we are going to remove the need for your organization to manage the underlying infrastructure</p> </li> <li> <p>You can focus on the deployment and management of your applications</p> </li> </ul>"},{"location":"typesofCC/#3-software-as-a-service-saas","title":"3. Software as a Service (SaaS)","text":"<ul> <li>This is a completed product that is going to be run and managed by the Service Provider</li> </ul>"},{"location":"typesofCC/#so-if-you-want-to-compare-all-of-these-things","title":"So if you want to compare all of these things:","text":"<p>Let us take an example \u2192 On Premises, you are going to manage everything. This will involve your:</p> <ol> <li> <p>Applications</p> </li> <li> <p>Data</p> </li> <li> <p>Runtime</p> </li> <li> <p>Middleware</p> </li> <li> <p>OS (Operating System)</p> </li> <li> <p>Virtualization</p> </li> <li> <p>Servers</p> </li> <li> <p>Storage</p> </li> <li> <p>Networking</p> </li> </ol>"},{"location":"typesofCC/#with-iaas-infrastructure-as-a-service-we-manage","title":"With IaaS (Infrastructure as a Service), we manage:","text":"<ol> <li> <p>Applications</p> </li> <li> <p>Data</p> </li> <li> <p>Runtime</p> </li> <li> <p>Middleware</p> </li> <li> <p>OS</p> </li> </ol> <p>While AWS manages: 6. Virtualization 7. Servers 8. Storage 9. Networking</p> <p>With the PaaS (Platform as a Service), we manage even less, so everything from the runtime to the networking is managed by AWS and the only thing we care about when we use a platform as a service is our application and our data, meaning: 1. Application (we will manage this) 2. Data (we will manage this) 3. Runtime (AWS will handle it) 4. Middleware (AWS will handle it) 5. OS (AWS will handle it) 6. Virtualization (AWS will handle it) 7. Servers (AWS will handle it) 8. Storage (AWS will handle it) 9. Networking (AWS will handle it)</p> <p>See the image below for better understanding: </p> <p>Finally if you are using Software as a service (SaaS), Everything is going to be managed by the AWS  </p>"},{"location":"typesofCC/#examples-of-cloud-computing-types","title":"Examples of Cloud Computing Types","text":"<p>Well with the IaaS, we can use: 1. EC2 (With AWS) 2. GCP, Azure, Rackspace, Digital Ocean, Linode</p> <p>With PaaS, also exists on AWS, and example include: 1. Elastic Beanstalk (on AWS) 2. Outside of AWS, the examples include:  Heroku, Google App Engine (GCP), Windows Azure (Microsoft)</p> <p>For SaaS, we will also have this on AWS, that represents many services: 1. Rekognition for ML (AWS service) 2. Real world applications like Gmail (Google App), Dropbox, Zoom for Meetings</p>"},{"location":"typesofCC/#pricing-of-the-cloud","title":"Pricing of the Cloud","text":"<ul> <li>AWS has 3 pricing fundamentals. It will follow the pay-as-you-go pricing model </li> <li>For Compute: (Since for compute, it is involved in various services)</li> <li>We are going to pay for exact compute time </li> <li>For Storage:</li> <li>We are going to pay for the exact amount of the data stored in the cloud </li> <li>For Networking:</li> <li>We are going to only pay when the data leaves the cloud. </li> <li>Any data that goes into the cloud is Free. (This solves the expensive issue of Traditional IT)</li> </ul>"}]}